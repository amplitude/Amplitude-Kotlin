plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'com.kezong.fat-aar'
}

ext {
    PUBLISH_NAME = 'Amplitude Android Kotlin SDK'
    PUBLISH_DESCRIPTION = 'Amplitude Kotlin client-side SDK for Android'
    PUBLISH_GROUP_ID = 'com.amplitude'
    PUBLISH_VERSION = '1.18.0'
    PUBLISH_ARTIFACT_ID = 'analytics-android'
}

apply from: "${rootDir}/gradle/publish-module.gradle"
version = PUBLISH_VERSION

android {
    compileSdk 34

    defaultConfig {
        multiDexEnabled true

        minSdk 19
        targetSdk 34
        versionName PUBLISH_VERSION
        buildConfigField "String", "AMPLITUDE_VERSION", "\"${version}\""

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
            returnDefaultValues = true
        }
    }
}

dependencies {
    embed project(':common')
    embed project(':common-jvm')
    embed project(':common-android')
    embed project(':core')
    embed project(':event-bridge')
    embed project(':id')
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.2'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.2'
    implementation 'com.amplitude:analytics-connector:1.0.0'
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.activity:activity-ktx:1.9.1'
    compileOnly 'androidx.fragment:fragment-ktx:1.8.2'
    compileOnly 'androidx.compose.ui:ui:1.6.8'

    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'

    testImplementation 'io.mockk:mockk:1.12.4'
    testImplementation project(':core')
    testImplementation project(path: ':common-android')
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4'
    testImplementation 'com.squareup.okhttp3:mockwebserver:4.10.0'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.2'
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit:1.8.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.7.2'
    testImplementation("junit:junit:4.13.2")
    testRuntimeOnly("org.junit.vintage:junit-vintage-engine:5.7.2")
    testImplementation 'org.robolectric:robolectric:4.12.1'
    testImplementation 'androidx.test:core:1.4.0'
    testImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    testImplementation 'org.json:json:20211205'
}

tasks.dokkaHtmlPartial.configure {
    failOnWarning.set(true)
}

tasks.withType(Test) {
    useJUnitPlatform()
    testLogging {
        showStandardStreams = true
    }
}
